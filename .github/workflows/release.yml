name: Publicar Release Multiplataforma

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-svelte:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 9
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - run: pnpm install --frozen-lockfile

      - name: Construir o SvelteKit SPA
        env:
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_KEY: ${{ secrets.VITE_SUPABASE_KEY }}
          VITE_SEARCH_GAMES_FUNCTION_URL: ${{ secrets.VITE_SEARCH_GAMES_FUNCTION_URL }}
          VITE_SEARCH_FUTURE_GAMES_FUNCTION_URL: ${{ secrets.VITE_SEARCH_FUTURE_GAMES_FUNCTION_URL }}
          VITE_DELETE_USER_FUNCTION_URL: ${{ secrets.VITE_DELETE_USER_FUNCTION_URL }}
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
        run: pnpm run build

      - uses: actions/upload-artifact@v4
        with:
          name: build-dist
          path: build/

  build-capacitor-android:
    runs-on: ubuntu-latest
    needs: build-svelte
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 9
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - run: pnpm install --frozen-lockfile

      - uses: actions/download-artifact@v4
        with:
          name: build-dist
          path: build/

      - run: npx cap sync android

      - name: Construir o APK de Debug
        run: |
          chmod +x android/gradlew
          cd android
          ./gradlew assembleDebug
        
      - uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: android/app/build/outputs/apk/debug/app-debug.apk

  build-tauri-desktop:
    needs: build-svelte
    strategy:
      fail-fast: false
      matrix:
        platform: [windows-latest, ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 9
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Instalar Rust
        run: rustup update stable
        shell: bash
      
      - name: Instalar dependências do Svelte
        run: pnpm install --frozen-lockfile

      - uses: actions/download-artifact@v4
        with:
          name: build-dist
          path: build/
          
      - name: Instalar dependências do Tauri no Linux
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev build-essential libssl-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev

      - name: Construir o app Tauri
        run: pnpm tauri build

      - name: Salvar o artefato (Windows .msi)
        if: matrix.platform == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: windows-installer
          path: src-tauri/target/release/bundle/msi/*.msi

      - name: Salvar o artefato (Linux .AppImage)
        if: matrix.platform == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: linux-appimage
          path: src-tauri/target/release/bundle/appimage/*.AppImage

  publish-release:
    runs-on: ubuntu-latest
    needs: [build-capacitor-android, build-tauri-desktop]
    permissions:
      contents: write
    steps:
      - name: Baixar todos os artefatos de build
        uses: actions/download-artifact@v4
        with:
          path: artifacts/

      - name: Publicar no GitHub Releases
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: "Release ${{ github.ref_name }}"
          draft: false
          prerelease: false
          files: |
            artifacts/android-apk/app-debug.apk
            artifacts/windows-installer/*.msi
            artifacts/linux-appimage/*.AppImage